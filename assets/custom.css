/* normalize.css v5.0.0 | MIT License | github.com/necolas/normalize.css */
html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%;}body{margin:0}article,aside,footer,header,nav,section{display:block}h1{font-size:2em;margin:.67em 0}figcaption,figure,main{display:block}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible;}pre{font-family:monospace,monospace;font-size:1em;}a{background-color:transparent;-webkit-text-decoration-skip:objects;}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted;}b,strong{font-weight:inherit}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em;}dfn{font-style:italic}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}audio,video{display:inline-block}audio:not([controls]){display:none;height:0}img{border-style:none}svg:not(:root){overflow:hidden}button,input,optgroup,select,textarea{font-family:sans-serif;font-size:100%;line-height:1.15;margin:0;}button,input{overflow:visible}button,select{text-transform:none}button,html [type="button"],[type="reset"],[type="submit"]{-webkit-appearance:button;}button::-moz-focus-inner,[type="button"]::-moz-focus-inner,[type="reset"]::-moz-focus-inner,[type="submit"]::-moz-focus-inner{border-style:none;padding:0}button:-moz-focusring,[type="button"]:-moz-focusring,[type="reset"]:-moz-focusring,[type="submit"]:-moz-focusring{outline:1px dotted ButtonText}fieldset{border:1px solid #c0c0c0;margin:0 2px;padding:.35em .625em .75em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal;}progress{display:inline-block;vertical-align:baseline;}textarea{overflow:auto}[type="checkbox"],[type="radio"]{box-sizing:border-box;padding:0;}[type="number"]::-webkit-inner-spin-button,[type="number"]::-webkit-outer-spin-button{height:auto}[type="search"]{-webkit-appearance:textfield;outline-offset:-2px;}[type="search"]::-webkit-search-cancel-button,[type="search"]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit;}details,menu{display:block}summary{display:list-item}canvas{display:inline-block}template{display:none}[hidden]{display:none}*{box-sizing:border-box}.container{position:relative;margin:auto;width:80%}@font-face{font-family:-apple-system,BlinkMacSystemFont,"Avenir Next","Segoe UI","Roboto","Oxygen","Ubuntu","Cantarell","Fira Sans","Droid Sans","Helvetica Neue",sans-serif}body.is-fixed{padding-top:100vh}.background{height:100vh;background:url("/assets/img/resize.jpg") no-repeat center bottom;background-size:cover;}.background:before{content:'';position:absolute;top:0;right:0;bottom:0;left:0;background-image:-webkit-linear-gradient(left,#3023ae,#c96dd8);background-image:linear-gradient(90deg,#3023ae,#c96dd8);opacity:.65}.background.is-fixed{background-position:center bottom;width:100%;top:-100vh;margin-top:70px;position:fixed}.card-wrapper{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;height:100vh;overflow:hidden;}.card-wrapper.is-fixed{display:none}.card{z-index:1000;background-color:#fff;height:400px;width:350px;padding-top:40px;text-align:center;border-radius:5px;}.card .profile-img{border-radius:100px;width:135px}.card .name{margin-top:41px;text-transform:uppercase;letter-spacing:1px;font-family:'Avenir Next';color:#4a4a4a;font-weight:400;font-size:22px;letter-spacing:.7px}.card .profession{font-family:'Avenir Next';font-weight:400;color:#4a4a4a;font-size:18px;margin-top:10px;letter-spacing:2px}.card .flex-container{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;margin-top:30px;}.card .flex-container img{margin:0 15px;}.card .flex-container img:hover{-webkit-transition:opacity .4s ease;transition:opacity .4s ease;opacity:.7}.navwrap{position:absolute;bottom:0;width:100%;padding:10px 0;}.navwrap.is-fixed{position:fixed;top:0;bottom:auto}.fixed-nav{background-image:url("/assets/img/resize.jpg");background-size:cover;background-attachment:fixed;position:fixed;top:0;width:100%;padding:10px 0;}.fixed-nav:before{content:'';position:absolute;top:0;right:0;bottom:0;left:0;background-image:-webkit-linear-gradient(left,#3023ae,#c96dd8);background-image:linear-gradient(90deg,#3023ae,#c96dd8);opacity:.65}.navbar{z-index:1001;margin:auto;width:100%;font-family:"Avenir Next";font-weight:300;}.navbar .logo{float:left;}.navbar .logo img{width:70%}.navbar .navlinks{float:right;}.navbar .navlinks ul{list-style:none}.navbar .navlinks li{display:inline-block;margin-left:30px;}.navbar .navlinks li a{padding:10px;text-decoration:none;text-align:right;list-style:none;color:#fff;position:relative}.navbar .navlinks li a:before{content:"";position:absolute;width:100%;height:1px;bottom:0;left:0;background-color:#fff;visibility:hidden;-webkit-transform:scaleX(0);transform:scaleX(0);-webkit-transition:all .2s ease-in-out 0s;transition:all .2s ease-in-out 0s}.navbar .navlinks li a:hover:before{visibility:visible;-webkit-transform:scaleX(1);transform:scaleX(1)}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
